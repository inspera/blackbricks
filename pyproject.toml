[tool.poetry]
name = "blackbricks"
version = "0.7.0"
description = "Black for Databricks notebooks"
authors = ["Bendik Samseth <bendik.samseth@inspera.no>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/inspera/blackbricks"
keywords = ["automation", "formatter", "black", "sql", "yapf", "autopep8", "pyfmt", "gofmt", "rustfmt"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Quality Assurance",
]

[tool.poetry.scripts]
blackbricks = "blackbricks.cli:app"

[tool.poetry.dependencies]
python = "^3.6.2"
black = "^21.5b1"
sqlparse = "^0.4.1"
databricks-cli = "^0.14.3"
typer = {extras = ["all"], version = "^0.3.2"}

[tool.poetry.dev-dependencies]
pytest = "^6.2.4"
isort = "^5.8.0"
flake8 = "^3.9.2"
commitizen = "^2.17.7"


[tool.commitizen]
name = "cz_conventional_commits"
version = "0.7.0"
tag_format = "$version"
version_files = [
    "blackbricks/__init__.py:version",
    "pyproject.toml:version"
]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
